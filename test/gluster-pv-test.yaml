kind: Template
apiVersion: v1
template: spark-test-pv
metadata:
  name: spark-test-pv
labels:
  app: sparkcluster-test-pv
objects:

##################################################################################
# Define the Gluster Cluster
##################################################################################
## setup gluster endpoints; this is the previously setup gluster cluster
- kind: Endpoints
  apiVersion: v1
  metadata:
    name: ${CLUSTER_NAME}-glusterfs
    labels:
      cluster: ${CLUSTER_NAME}
      type: glusterfs-cluster
  subsets:
    - addresses:
        - ip: ${GLUSTER_CLUSTER_IP_1}
      ports:
        - port: 1
    - addresses:
        - ip: ${GLUSTER_CLUSTER_IP_2}
      ports:
        - port: 1
    - addresses:
        - ip: ${GLUSTER_CLUSTER_IP_3}
      ports:
        - port: 1

#need a service to persist the endpoints in this namespace
# match name with endpoint name
- kind: Service
  apiVersion: v1
  metadata:
    name: ${CLUSTER_NAME}-glusterfs
    labels:
      cluster: ${CLUSTER_NAME}
      type: glusterfs-cluster
  spec:
    ports:
      - port: 1

# setup the Persistent Volumes that will be claimed by analytics
# note path is the name of the volume.
# it is a test environment - therefore persistentVolumeReclaimPolicy to Delete (not Retain)
- kind: PersistentVolume
  apiVersion: v1
  metadata:
    name: ${CLUSTER_NAME}-glusterfs-scratch
    labels:
      cluster: ${CLUSTER_NAME}
      type: glusterfs-cluster
      gluster-cluster: ${CLUSTER_NAME}-glusterfs
  spec:
    capacity:
      storage: 2Gi
    accessModes:
      - ReadWriteMany
    glusterfs:
      endpoints: ${CLUSTER_NAME}-glusterfs
      path: /scratch
      readOnly: false
    persistentVolumeReclaimPolicy: Delete

# mapped to PV by access mode
# mapped to "pod" by name in volumes section
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${MASTER_NAME}-scratch
    labels:
      name: ${MASTER_NAME}
      cluster: ${CLUSTER_NAME}
      gluster-cluster: ${CLUSTER_NAME}-glusterfs
  spec:
    accessModes:
    - ReadWriteMany
    resources:
       requests:
         storage: 2Gi

# logs...  ReadWriteOnce -
- kind: PersistentVolume
  apiVersion: v1
  metadata:
    name: ${CLUSTER_NAME}-glusterfs-logs
    labels:
      cluster: ${CLUSTER_NAME}
      type: glusterfs-cluster
      gluster-cluster: ${CLUSTER_NAME}-glusterfs
  spec:
    capacity:
      storage: 5Gi
    accessModes:
      - ReadWriteOnce
    glusterfs:
      endpoints: ${CLUSTER_NAME}-glusterfs
      path: /logs
      readOnly: false
    persistentVolumeReclaimPolicy: Delete

# mapped to PV by access mode
# mapped to "pod" by name in volumes section
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: ${MASTER_NAME}-logs
    labels:
      name: ${MASTER_NAME}
      cluster: ${CLUSTER_NAME}
      gluster-cluster: ${CLUSTER_NAME}-glusterfs
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
       requests:
         storage: 5Gi

##################################################################################
# Define the Compute (Spark) Cluster
##################################################################################
- kind: Service
  apiVersion: v1
  metadata:
    name: ${MASTER_NAME}
    labels:
      name: ${MASTER_NAME}
  spec:
    ports:
      - protocol: TCP
        port: 7077
        targetPort: 7077
    selector:
      name: ${MASTER_NAME}

- kind: Service
  apiVersion: v1
  metadata:
    name: ${MASTER_NAME}-webui
    labels:
      name: ${MASTER_NAME}
  spec:
    ports:
      - protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      name: ${MASTER_NAME}

# 1) naming is local to this DeploymentConfig
# volumeMounts:
#  - name: glusterfs-data
#
# must match
#
# volumes:
#  - name: glusterfs-data
#
# 2) Access to gluster volumes
# determine ACL (group)
#    $ ls -lZ /mnt/glusterfs/
#    drwxrwx---. yarn hadoop system_u:object_r:fusefs_t:s0    HadoopVol
#
#    $ id yarn
#    uid=592(yarn) gid=590(hadoop) groups=590(hadoop)
#
#        securityContext:
#          supplementalGroups: [590]
# 3) privileged accounts
#            securityContext:
#              privileged: true
# requires a privileged account
# see https://adam.younglogic.com/2017/06/creating-a-privileged-container-in-openshift/
#
# oc create serviceaccount -n <my-namespace> <my-privilegeduser>
# oc adm policy add-scc-to-user privileged -n <my-namespace> -z <my-privilegeduser>
# add to template (pod...)
#    serviceAccountName:
#      privilegeduser
#
# or (dangerous)
#
# oc adm policy add-scc-to-user privileged -n <my-namespace> -z default
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${MASTER_NAME}
    labels:
      cluster: ${CLUSTER_NAME}
      type: master
  spec:
    strategy:
      type: Rolling
    triggers:
      - type: ConfigChange
    replicas: 1
    selector:
      name: ${MASTER_NAME}
    template:
      metadata:
        labels:
          name: ${MASTER_NAME}
      spec:
        containers:
          - name: ${MASTER_NAME}
            image: ${SPARK_IMAGE}
            imagePullPolicy: "Always"
            env:
              - name: SPARK_MASTER_PORT
                value: "7077"
              - name: SPARK_MASTER_WEBUI_PORT
                value: "8080"
            ports:
              - containerPort: 7077
                protocol: TCP
              - containerPort: 8080
                protocol: TCP
            volumeMounts:
              - name: glusterfs-data
                mountPath: /mnt/data
                readnly: false
        securityContext:
          supplementalGroups: [0, 185]
        volumes:
          - name: glusterfs-data
            persistentVolumeClaim:
              claimName: ${MASTER_NAME}-scratch

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${WORKER_NAME}
    labels:
      cluster: ${CLUSTER_NAME}
      type: worker
  spec:
    strategy:
      type: Rolling
    triggers:
      - type: ConfigChange
    replicas: ${WORKER_REPLICAS}
    selector:
      name: ${WORKER_NAME}
    template:
      metadata:
        labels:
          name: ${WORKER_NAME}
      spec:
        containers:
          - name: ${WORKER_NAME}
            image: ${SPARK_IMAGE}
            imagePullPolicy: "Always"
            env:
              - name: SPARK_MASTER_ADDRESS
                value: spark://${MASTER_NAME}:7077
              - name: SPARK_MASTER_UI_ADDRESS
                value: http://${MASTER_NAME}-webui:8080
            volumeMounts:
              - name: glusterfs-data
                mountPath: /mnt/data
                readnly: false
        securityContext:
          supplementalGroups: [0, 185]
        volumes:
          - name: glusterfs-data
            persistentVolumeClaim:
              claimName: ${MASTER_NAME}-scratch

##################################################################################
# Parameter Block
##################################################################################
parameters:
- name: SPARK_IMAGE
  description: Name of the Spark master/worker image
  value: docker.io/jeffreymanning/spark-node:latest
- name: CLUSTER_NAME
  description: name of cluster - applicable to spark infrastructure
  generate: expression
  from: "cluster-[a-z0-9]{4}"
  required: true
- name: MASTER_NAME
  description: master name used as a service name and a selector
  generate: expression
  from: "spark-master-[a-z0-9]{4}"
  required: true
- name: WORKER_NAME
  description: worker name used as a selector
  generate: expression
  from: "spark-worker-[a-z0-9]{4}"
  required: true
- name: WORKER_REPLICAS
  description: worker replica count
  value: "3"
  required: true
# gluster parameters
- name: GLUSTER_NAME
  description: gluster name used for selector
  generate: expression
  from: "spark-gluster-[a-z0-9]{4}"
  required: true
# gluster cluster is composed of at least 3 IP addresses
- name: GLUSTER_CLUSTER_IP_1
  description: IP Addr 1
  value: "192.168.1.101"
  required: true
- name: GLUSTER_CLUSTER_IP_2
  description: IP Addr 2
  value: "192.168.1.102"
  required: true
- name: GLUSTER_CLUSTER_IP_3
  description: IP Addr 3
  value: "192.168.1.103"
  required: true
